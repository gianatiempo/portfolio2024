---
import FormattedDate from '../../components/blog/FormattedDate.astro'
import PostNavigation from '../../components/blog/PostNavigation.astro'
import BackToPrevious from '../../components/blog/BackToPrevious.astro'
import Container from '../../components/base/Container.astro'
import { humanize, readingTime, similarItems } from '../../lib/utils'
import Layout from '../../Layout.astro'
import { type CollectionEntry, getCollection } from 'astro:content'
import { slug } from 'github-slugger'
import { Image } from 'astro:assets'
import ariel from '../../assets/ariel.jpeg'
import Posts from '@components/blog/Posts.astro'

export async function getStaticPaths() {
	const posts = (await getCollection('post')).filter((post) => !post.data.draft).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post
	}))
}
type Props = CollectionEntry<'post'>

const posts = (await getCollection('post')).filter((post) => !post.data.draft).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())

function getNextPost() {
	let postIndex
	for (const post of posts) {
		if (post.slug === Astro.params.slug) {
			postIndex = posts.indexOf(post)
			return posts[postIndex + 1]
		}
	}
}

function getPrevPost() {
	let postIndex
	for (const post of posts) {
		if (post.slug === Astro.params.slug) {
			postIndex = posts.indexOf(post)
			return posts[postIndex - 1]
		}
	}
}

const nextPost = getNextPost()
const prevPost = getPrevPost()

const post = Astro.props
const { Content } = await post.render()

const similarPosts = similarItems(post, posts, post.slug)
---

<Layout title={post.data.title} description={post.data.description} type="blog">
	<main class="space-y-16 overflow-clip sm:space-y-28 lg:space-y-32">
		<section class="relative min-h-screen scroll-mt-24 overflow-hidden">
			<Container>
				<div class="relative pt-24 sm:pt-40 lg:pt-44">
					<header class="mb-4 lg:mb-6">
						<address class="mb-6 flex items-center">
							<div class="mr-3 inline-flex items-center text-sm text-gray-900 dark:text-white">
								<Image class="mr-4 h-16 w-16 rounded-full" src={ariel} width={64} height={64} alt={post.data.author} />
								<div>
									<p class="text-xl font-bold text-gray-900 dark:text-white">{post.data.author}</p>
									<p class="text-base text-gray-500 dark:text-gray-400"><FormattedDate date={post.data.date} /> &bull; {readingTime(post.body)}</p>
									<ul class="mb-4 mr-4 list-none">
										{
											post.data.categories.map((category: string, i: number) => (
												<li class="mr-1 inline-block">
													<a href={`/category/${slug(category)}`} class="hover:text-primary font-medium">
														{`${humanize(category)}${i !== post.data.categories.length - 1 ? ', ' : ''}`}
													</a>
												</li>
											))
										}
									</ul>
								</div>
							</div>
						</address>
						<h1 class="mb-4 text-3xl font-extrabold leading-tight text-gray-900 dark:text-white lg:mb-6 lg:text-6xl">{post.data.title}</h1>
						<BackToPrevious href="javascript:history.back()">Go Back</BackToPrevious>
					</header>
					<article class="prose prose-zinc mx-auto max-w-7xl dark:prose-invert lg:prose-xl">
						<Content />
						<ul class="not-prose flex">
							{
								post.data.tags.map((tag: string) => (
									<li>
										<a href={`/tag/${slug(tag)}`} class="block rounded-lg py-2 pr-4 text-sm font-semibold">
											#{humanize(tag)}
										</a>
									</li>
								))
							}
						</ul>
					</article>
					<div class="mt-12 text-gray-900 dark:text-white">
						<PostNavigation prevPost={prevPost} nextPost={nextPost} />
					</div>
					{
						similarPosts.length > 0 && (
							<section class="text-zinc-600 dark:text-zinc-300">
								<Container>
									<div class="pb-8 text-center">
										<h2 class="mt-12 text-2xl font-semibold text-zinc-950 dark:text-white md:text-4xl">Similar Posts</h2>
									</div>

									<Posts list={similarPosts.slice(0, 3)} />
								</Container>
							</section>
						)
					}
				</div>
			</Container>
		</section>
	</main>
</Layout>
